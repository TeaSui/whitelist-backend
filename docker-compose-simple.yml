# =====================================================
# SIMPLE Whitelist Token Project Setup
# Only the essential services needed to run the application
# =====================================================

services:
  # Database - PostgreSQL
  postgres:
    image: postgres:15-alpine
    container_name: whitelist-postgres
    restart: always
    environment:
      POSTGRES_DB: whitelist_token_db
      POSTGRES_USER: whitelist_user
      POSTGRES_PASSWORD: secure_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U whitelist_user -d whitelist_token_db"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Cache - Redis
  redis:
    image: redis:7-alpine
    container_name: whitelist-redis
    restart: always
    command: redis-server --requirepass redis_password
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--pass", "redis_password", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Local Blockchain - Hardhat Network
  hardhat:
    build:
      context: ./contracts
      dockerfile: Dockerfile
    container_name: whitelist-hardhat
    ports:
      - "8545:8545"
      - "8546:8546"
    healthcheck:
      test: ["CMD", "curl", "-f", "-X", "POST", "-H", "Content-Type: application/json", "-d", "{\"jsonrpc\":\"2.0\",\"method\":\"eth_blockNumber\",\"id\":1}", "http://localhost:8545"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # Backend API - Run locally with IntelliJ
  # Removed - will run locally
  
  # Frontend - Run locally with npm run dev  
  # Removed - will run locally

  # Database Admin Tool (Optional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: whitelist-pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@whitelist.com
      PGADMIN_DEFAULT_PASSWORD: admin123
    ports:
      - "5050:80"
    depends_on:
      - postgres
    profiles:
      - tools  # Only start when using --profile tools

volumes:
  postgres_data:
  redis_data: